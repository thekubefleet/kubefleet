name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: dashboard/package-lock.json

    - name: Install Go dependencies
      run: go mod download

    - name: Install Node.js dependencies
      run: |
        cd dashboard
        npm ci

    - name: Generate protobuf code
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
        protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto/agent.proto

    - name: Run Go tests
      run: go test -v ./...

    - name: Run Go build
      run: |
        go build -o agent ./cmd/agent
        go build -o server ./cmd/server

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build agent image
      run: docker build -t kubefleet-agent:test .

    - name: Build dashboard image
      run: docker build -f Dockerfile.dashboard -t kubefleet-dashboard:test .

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Run Go security check
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

    - name: Run npm audit
      run: |
        cd dashboard
        npm audit --audit-level=moderate 